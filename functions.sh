#!/bin/bash

echo "Bash позволяет создавать функции. Для этого необходимо после имени функции поставить скобочки ()"
echo "и затем в фигурных скобочках {} написать код"
echo "Саму функцию можно вызывать только после ее объявления"

func1() {
  echo "func1 was invoked..."
}

func1

echo
echo "В функцию можно неявно передать сколько угодно параметров, при этом объявлять аргументы функции в скобках не нужно"
echo "Обратиться к аргументу можно через \$n, где n - это порядковый номер аргумента. Нумерация начинается с 1"
echo "Все аргументы можно получить через \$* (тогда все аргументы будут переданы единой строкой),"
echo "или через \$@ (тогда все аргументы будут переданы массивом)"

func2() {
  echo "func1 was invoked..."
  echo "First param: ${1}"
  echo "All params as string: ${*}"
  counter=1
  for param in "${@}"; do
    echo "Param ${counter}: ${param}"
    ((counter++))
  done
}

func2 1 2 param foo bar

echo
echo "Функции не возвращают значение(возвращают void). Но есть способ возвращать значение через standard output"
echo "Для этого в конце функции нужно вызвать команду echo и в нее передать нужные результат"

func3() {
  echo "$((5 * 5))"
}

result="$(func3)"
echo "5 * 5 = ${result}"

echo
echo "По умолчанию у переменных объявленных в функции широкая область видимости, т.е. онм видны и за пределами функции"
echo "Чтобы сузить область видимости до функции перед переменными нужно ставить ключевое слово local"

func4() {
  local var1=5
  echo "5^3 = $((var1 ** 3))"
}

func4
